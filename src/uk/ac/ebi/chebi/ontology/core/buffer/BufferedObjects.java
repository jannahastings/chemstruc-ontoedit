// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cdkobjects.proto

package uk.ac.ebi.chebi.ontology.core.buffer;

public final class BufferedObjects {
  private BufferedObjects() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Point2d extends
      com.google.protobuf.GeneratedMessage {
    // Use Point2d.newBuilder() to construct.
    private Point2d() {
      initFields();
    }
    private Point2d(boolean noInit) {}
    
    private static final Point2d defaultInstance;
    public static Point2d getDefaultInstance() {
      return defaultInstance;
    }
    
    public Point2d getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Point2d_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Point2d_fieldAccessorTable;
    }
    
    // required double x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private boolean hasX;
    private double x_ = 0D;
    public boolean hasX() { return hasX; }
    public double getX() { return x_; }
    
    // required double y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private boolean hasY;
    private double y_ = 0D;
    public boolean hasY() { return hasY; }
    public double getY() { return y_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasX) return false;
      if (!hasY) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasX()) {
        output.writeDouble(1, getX());
      }
      if (hasY()) {
        output.writeDouble(2, getY());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, getX());
      }
      if (hasY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, getY());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d result;
      
      // Construct using uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d();
        return builder;
      }
      
      protected uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d.getDescriptor();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d getDefaultInstanceForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d) {
          return mergeFrom((uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d other) {
        if (other == uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setX(input.readDouble());
              break;
            }
            case 17: {
              setY(input.readDouble());
              break;
            }
          }
        }
      }
      
      
      // required double x = 1;
      public boolean hasX() {
        return result.hasX();
      }
      public double getX() {
        return result.getX();
      }
      public Builder setX(double value) {
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder clearX() {
        result.hasX = false;
        result.x_ = 0D;
        return this;
      }
      
      // required double y = 2;
      public boolean hasY() {
        return result.hasY();
      }
      public double getY() {
        return result.getY();
      }
      public Builder setY(double value) {
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder clearY() {
        result.hasY = false;
        result.y_ = 0D;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:uk.ac.ebi.chebi.ontology.core.buffer.Point2d)
    }
    
    static {
      defaultInstance = new Point2d(true);
      uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:uk.ac.ebi.chebi.ontology.core.buffer.Point2d)
  }
  
  public static final class Point3d extends
      com.google.protobuf.GeneratedMessage {
    // Use Point3d.newBuilder() to construct.
    private Point3d() {
      initFields();
    }
    private Point3d(boolean noInit) {}
    
    private static final Point3d defaultInstance;
    public static Point3d getDefaultInstance() {
      return defaultInstance;
    }
    
    public Point3d getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Point3d_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Point3d_fieldAccessorTable;
    }
    
    // required double x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private boolean hasX;
    private double x_ = 0D;
    public boolean hasX() { return hasX; }
    public double getX() { return x_; }
    
    // required double y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private boolean hasY;
    private double y_ = 0D;
    public boolean hasY() { return hasY; }
    public double getY() { return y_; }
    
    // required double z = 3;
    public static final int Z_FIELD_NUMBER = 3;
    private boolean hasZ;
    private double z_ = 0D;
    public boolean hasZ() { return hasZ; }
    public double getZ() { return z_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasX) return false;
      if (!hasY) return false;
      if (!hasZ) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasX()) {
        output.writeDouble(1, getX());
      }
      if (hasY()) {
        output.writeDouble(2, getY());
      }
      if (hasZ()) {
        output.writeDouble(3, getZ());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, getX());
      }
      if (hasY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, getY());
      }
      if (hasZ()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, getZ());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d result;
      
      // Construct using uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d();
        return builder;
      }
      
      protected uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d.getDescriptor();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d getDefaultInstanceForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d) {
          return mergeFrom((uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d other) {
        if (other == uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasZ()) {
          setZ(other.getZ());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setX(input.readDouble());
              break;
            }
            case 17: {
              setY(input.readDouble());
              break;
            }
            case 25: {
              setZ(input.readDouble());
              break;
            }
          }
        }
      }
      
      
      // required double x = 1;
      public boolean hasX() {
        return result.hasX();
      }
      public double getX() {
        return result.getX();
      }
      public Builder setX(double value) {
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder clearX() {
        result.hasX = false;
        result.x_ = 0D;
        return this;
      }
      
      // required double y = 2;
      public boolean hasY() {
        return result.hasY();
      }
      public double getY() {
        return result.getY();
      }
      public Builder setY(double value) {
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder clearY() {
        result.hasY = false;
        result.y_ = 0D;
        return this;
      }
      
      // required double z = 3;
      public boolean hasZ() {
        return result.hasZ();
      }
      public double getZ() {
        return result.getZ();
      }
      public Builder setZ(double value) {
        result.hasZ = true;
        result.z_ = value;
        return this;
      }
      public Builder clearZ() {
        result.hasZ = false;
        result.z_ = 0D;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:uk.ac.ebi.chebi.ontology.core.buffer.Point3d)
    }
    
    static {
      defaultInstance = new Point3d(true);
      uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:uk.ac.ebi.chebi.ontology.core.buffer.Point3d)
  }
  
  public static final class AtomBuffer extends
      com.google.protobuf.GeneratedMessage {
    // Use AtomBuffer.newBuilder() to construct.
    private AtomBuffer() {
      initFields();
    }
    private AtomBuffer(boolean noInit) {}
    
    private static final AtomBuffer defaultInstance;
    public static AtomBuffer getDefaultInstance() {
      return defaultInstance;
    }
    
    public AtomBuffer getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AtomBuffer_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AtomBuffer_fieldAccessorTable;
    }
    
    // optional string symbol = 1;
    public static final int SYMBOL_FIELD_NUMBER = 1;
    private boolean hasSymbol;
    private java.lang.String symbol_ = "";
    public boolean hasSymbol() { return hasSymbol; }
    public java.lang.String getSymbol() { return symbol_; }
    
    // optional int32 atomicNumber = 12;
    public static final int ATOMICNUMBER_FIELD_NUMBER = 12;
    private boolean hasAtomicNumber;
    private int atomicNumber_ = 0;
    public boolean hasAtomicNumber() { return hasAtomicNumber; }
    public int getAtomicNumber() { return atomicNumber_; }
    
    // optional string atomTypeName = 2;
    public static final int ATOMTYPENAME_FIELD_NUMBER = 2;
    private boolean hasAtomTypeName;
    private java.lang.String atomTypeName_ = "";
    public boolean hasAtomTypeName() { return hasAtomTypeName; }
    public java.lang.String getAtomTypeName() { return atomTypeName_; }
    
    // optional double charge = 4;
    public static final int CHARGE_FIELD_NUMBER = 4;
    private boolean hasCharge;
    private double charge_ = 0D;
    public boolean hasCharge() { return hasCharge; }
    public double getCharge() { return charge_; }
    
    // optional int32 hydrogenCount = 14;
    public static final int HYDROGENCOUNT_FIELD_NUMBER = 14;
    private boolean hasHydrogenCount;
    private int hydrogenCount_ = 0;
    public boolean hasHydrogenCount() { return hasHydrogenCount; }
    public int getHydrogenCount() { return hydrogenCount_; }
    
    // optional int32 atomIndex = 7;
    public static final int ATOMINDEX_FIELD_NUMBER = 7;
    private boolean hasAtomIndex;
    private int atomIndex_ = 0;
    public boolean hasAtomIndex() { return hasAtomIndex; }
    public int getAtomIndex() { return atomIndex_; }
    
    // optional bool isAromatic = 8;
    public static final int ISAROMATIC_FIELD_NUMBER = 8;
    private boolean hasIsAromatic;
    private boolean isAromatic_ = false;
    public boolean hasIsAromatic() { return hasIsAromatic; }
    public boolean getIsAromatic() { return isAromatic_; }
    
    // optional bool isAttachmentPseudoAtom = 9;
    public static final int ISATTACHMENTPSEUDOATOM_FIELD_NUMBER = 9;
    private boolean hasIsAttachmentPseudoAtom;
    private boolean isAttachmentPseudoAtom_ = false;
    public boolean hasIsAttachmentPseudoAtom() { return hasIsAttachmentPseudoAtom; }
    public boolean getIsAttachmentPseudoAtom() { return isAttachmentPseudoAtom_; }
    
    // optional bool isPossibleAttachmentPoint = 15;
    public static final int ISPOSSIBLEATTACHMENTPOINT_FIELD_NUMBER = 15;
    private boolean hasIsPossibleAttachmentPoint;
    private boolean isPossibleAttachmentPoint_ = false;
    public boolean hasIsPossibleAttachmentPoint() { return hasIsPossibleAttachmentPoint; }
    public boolean getIsPossibleAttachmentPoint() { return isPossibleAttachmentPoint_; }
    
    // optional .uk.ac.ebi.chebi.ontology.core.buffer.Point2d point2d = 10;
    public static final int POINT2D_FIELD_NUMBER = 10;
    private boolean hasPoint2D;
    private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d point2D_;
    public boolean hasPoint2D() { return hasPoint2D; }
    public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d getPoint2D() { return point2D_; }
    
    // optional .uk.ac.ebi.chebi.ontology.core.buffer.Point3d point3d = 11;
    public static final int POINT3D_FIELD_NUMBER = 11;
    private boolean hasPoint3D;
    private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d point3D_;
    public boolean hasPoint3D() { return hasPoint3D; }
    public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d getPoint3D() { return point3D_; }
    
    private void initFields() {
      point2D_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d.getDefaultInstance();
      point3D_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasPoint2D()) {
        if (!getPoint2D().isInitialized()) return false;
      }
      if (hasPoint3D()) {
        if (!getPoint3D().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSymbol()) {
        output.writeString(1, getSymbol());
      }
      if (hasAtomTypeName()) {
        output.writeString(2, getAtomTypeName());
      }
      if (hasCharge()) {
        output.writeDouble(4, getCharge());
      }
      if (hasAtomIndex()) {
        output.writeInt32(7, getAtomIndex());
      }
      if (hasIsAromatic()) {
        output.writeBool(8, getIsAromatic());
      }
      if (hasIsAttachmentPseudoAtom()) {
        output.writeBool(9, getIsAttachmentPseudoAtom());
      }
      if (hasPoint2D()) {
        output.writeMessage(10, getPoint2D());
      }
      if (hasPoint3D()) {
        output.writeMessage(11, getPoint3D());
      }
      if (hasAtomicNumber()) {
        output.writeInt32(12, getAtomicNumber());
      }
      if (hasHydrogenCount()) {
        output.writeInt32(14, getHydrogenCount());
      }
      if (hasIsPossibleAttachmentPoint()) {
        output.writeBool(15, getIsPossibleAttachmentPoint());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSymbol()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSymbol());
      }
      if (hasAtomTypeName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getAtomTypeName());
      }
      if (hasCharge()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, getCharge());
      }
      if (hasAtomIndex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getAtomIndex());
      }
      if (hasIsAromatic()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, getIsAromatic());
      }
      if (hasIsAttachmentPseudoAtom()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, getIsAttachmentPseudoAtom());
      }
      if (hasPoint2D()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getPoint2D());
      }
      if (hasPoint3D()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getPoint3D());
      }
      if (hasAtomicNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, getAtomicNumber());
      }
      if (hasHydrogenCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, getHydrogenCount());
      }
      if (hasIsPossibleAttachmentPoint()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, getIsPossibleAttachmentPoint());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer result;
      
      // Construct using uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer();
        return builder;
      }
      
      protected uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.getDescriptor();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer getDefaultInstanceForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer) {
          return mergeFrom((uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer other) {
        if (other == uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.getDefaultInstance()) return this;
        if (other.hasSymbol()) {
          setSymbol(other.getSymbol());
        }
        if (other.hasAtomicNumber()) {
          setAtomicNumber(other.getAtomicNumber());
        }
        if (other.hasAtomTypeName()) {
          setAtomTypeName(other.getAtomTypeName());
        }
        if (other.hasCharge()) {
          setCharge(other.getCharge());
        }
        if (other.hasHydrogenCount()) {
          setHydrogenCount(other.getHydrogenCount());
        }
        if (other.hasAtomIndex()) {
          setAtomIndex(other.getAtomIndex());
        }
        if (other.hasIsAromatic()) {
          setIsAromatic(other.getIsAromatic());
        }
        if (other.hasIsAttachmentPseudoAtom()) {
          setIsAttachmentPseudoAtom(other.getIsAttachmentPseudoAtom());
        }
        if (other.hasIsPossibleAttachmentPoint()) {
          setIsPossibleAttachmentPoint(other.getIsPossibleAttachmentPoint());
        }
        if (other.hasPoint2D()) {
          mergePoint2D(other.getPoint2D());
        }
        if (other.hasPoint3D()) {
          mergePoint3D(other.getPoint3D());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setSymbol(input.readString());
              break;
            }
            case 18: {
              setAtomTypeName(input.readString());
              break;
            }
            case 33: {
              setCharge(input.readDouble());
              break;
            }
            case 56: {
              setAtomIndex(input.readInt32());
              break;
            }
            case 64: {
              setIsAromatic(input.readBool());
              break;
            }
            case 72: {
              setIsAttachmentPseudoAtom(input.readBool());
              break;
            }
            case 82: {
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d.Builder subBuilder = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d.newBuilder();
              if (hasPoint2D()) {
                subBuilder.mergeFrom(getPoint2D());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPoint2D(subBuilder.buildPartial());
              break;
            }
            case 90: {
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d.Builder subBuilder = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d.newBuilder();
              if (hasPoint3D()) {
                subBuilder.mergeFrom(getPoint3D());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPoint3D(subBuilder.buildPartial());
              break;
            }
            case 96: {
              setAtomicNumber(input.readInt32());
              break;
            }
            case 112: {
              setHydrogenCount(input.readInt32());
              break;
            }
            case 120: {
              setIsPossibleAttachmentPoint(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // optional string symbol = 1;
      public boolean hasSymbol() {
        return result.hasSymbol();
      }
      public java.lang.String getSymbol() {
        return result.getSymbol();
      }
      public Builder setSymbol(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSymbol = true;
        result.symbol_ = value;
        return this;
      }
      public Builder clearSymbol() {
        result.hasSymbol = false;
        result.symbol_ = getDefaultInstance().getSymbol();
        return this;
      }
      
      // optional int32 atomicNumber = 12;
      public boolean hasAtomicNumber() {
        return result.hasAtomicNumber();
      }
      public int getAtomicNumber() {
        return result.getAtomicNumber();
      }
      public Builder setAtomicNumber(int value) {
        result.hasAtomicNumber = true;
        result.atomicNumber_ = value;
        return this;
      }
      public Builder clearAtomicNumber() {
        result.hasAtomicNumber = false;
        result.atomicNumber_ = 0;
        return this;
      }
      
      // optional string atomTypeName = 2;
      public boolean hasAtomTypeName() {
        return result.hasAtomTypeName();
      }
      public java.lang.String getAtomTypeName() {
        return result.getAtomTypeName();
      }
      public Builder setAtomTypeName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAtomTypeName = true;
        result.atomTypeName_ = value;
        return this;
      }
      public Builder clearAtomTypeName() {
        result.hasAtomTypeName = false;
        result.atomTypeName_ = getDefaultInstance().getAtomTypeName();
        return this;
      }
      
      // optional double charge = 4;
      public boolean hasCharge() {
        return result.hasCharge();
      }
      public double getCharge() {
        return result.getCharge();
      }
      public Builder setCharge(double value) {
        result.hasCharge = true;
        result.charge_ = value;
        return this;
      }
      public Builder clearCharge() {
        result.hasCharge = false;
        result.charge_ = 0D;
        return this;
      }
      
      // optional int32 hydrogenCount = 14;
      public boolean hasHydrogenCount() {
        return result.hasHydrogenCount();
      }
      public int getHydrogenCount() {
        return result.getHydrogenCount();
      }
      public Builder setHydrogenCount(int value) {
        result.hasHydrogenCount = true;
        result.hydrogenCount_ = value;
        return this;
      }
      public Builder clearHydrogenCount() {
        result.hasHydrogenCount = false;
        result.hydrogenCount_ = 0;
        return this;
      }
      
      // optional int32 atomIndex = 7;
      public boolean hasAtomIndex() {
        return result.hasAtomIndex();
      }
      public int getAtomIndex() {
        return result.getAtomIndex();
      }
      public Builder setAtomIndex(int value) {
        result.hasAtomIndex = true;
        result.atomIndex_ = value;
        return this;
      }
      public Builder clearAtomIndex() {
        result.hasAtomIndex = false;
        result.atomIndex_ = 0;
        return this;
      }
      
      // optional bool isAromatic = 8;
      public boolean hasIsAromatic() {
        return result.hasIsAromatic();
      }
      public boolean getIsAromatic() {
        return result.getIsAromatic();
      }
      public Builder setIsAromatic(boolean value) {
        result.hasIsAromatic = true;
        result.isAromatic_ = value;
        return this;
      }
      public Builder clearIsAromatic() {
        result.hasIsAromatic = false;
        result.isAromatic_ = false;
        return this;
      }
      
      // optional bool isAttachmentPseudoAtom = 9;
      public boolean hasIsAttachmentPseudoAtom() {
        return result.hasIsAttachmentPseudoAtom();
      }
      public boolean getIsAttachmentPseudoAtom() {
        return result.getIsAttachmentPseudoAtom();
      }
      public Builder setIsAttachmentPseudoAtom(boolean value) {
        result.hasIsAttachmentPseudoAtom = true;
        result.isAttachmentPseudoAtom_ = value;
        return this;
      }
      public Builder clearIsAttachmentPseudoAtom() {
        result.hasIsAttachmentPseudoAtom = false;
        result.isAttachmentPseudoAtom_ = false;
        return this;
      }
      
      // optional bool isPossibleAttachmentPoint = 15;
      public boolean hasIsPossibleAttachmentPoint() {
        return result.hasIsPossibleAttachmentPoint();
      }
      public boolean getIsPossibleAttachmentPoint() {
        return result.getIsPossibleAttachmentPoint();
      }
      public Builder setIsPossibleAttachmentPoint(boolean value) {
        result.hasIsPossibleAttachmentPoint = true;
        result.isPossibleAttachmentPoint_ = value;
        return this;
      }
      public Builder clearIsPossibleAttachmentPoint() {
        result.hasIsPossibleAttachmentPoint = false;
        result.isPossibleAttachmentPoint_ = false;
        return this;
      }
      
      // optional .uk.ac.ebi.chebi.ontology.core.buffer.Point2d point2d = 10;
      public boolean hasPoint2D() {
        return result.hasPoint2D();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d getPoint2D() {
        return result.getPoint2D();
      }
      public Builder setPoint2D(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPoint2D = true;
        result.point2D_ = value;
        return this;
      }
      public Builder setPoint2D(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d.Builder builderForValue) {
        result.hasPoint2D = true;
        result.point2D_ = builderForValue.build();
        return this;
      }
      public Builder mergePoint2D(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d value) {
        if (result.hasPoint2D() &&
            result.point2D_ != uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d.getDefaultInstance()) {
          result.point2D_ =
            uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d.newBuilder(result.point2D_).mergeFrom(value).buildPartial();
        } else {
          result.point2D_ = value;
        }
        result.hasPoint2D = true;
        return this;
      }
      public Builder clearPoint2D() {
        result.hasPoint2D = false;
        result.point2D_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d.getDefaultInstance();
        return this;
      }
      
      // optional .uk.ac.ebi.chebi.ontology.core.buffer.Point3d point3d = 11;
      public boolean hasPoint3D() {
        return result.hasPoint3D();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d getPoint3D() {
        return result.getPoint3D();
      }
      public Builder setPoint3D(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPoint3D = true;
        result.point3D_ = value;
        return this;
      }
      public Builder setPoint3D(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d.Builder builderForValue) {
        result.hasPoint3D = true;
        result.point3D_ = builderForValue.build();
        return this;
      }
      public Builder mergePoint3D(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d value) {
        if (result.hasPoint3D() &&
            result.point3D_ != uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d.getDefaultInstance()) {
          result.point3D_ =
            uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d.newBuilder(result.point3D_).mergeFrom(value).buildPartial();
        } else {
          result.point3D_ = value;
        }
        result.hasPoint3D = true;
        return this;
      }
      public Builder clearPoint3D() {
        result.hasPoint3D = false;
        result.point3D_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:uk.ac.ebi.chebi.ontology.core.buffer.AtomBuffer)
    }
    
    static {
      defaultInstance = new AtomBuffer(true);
      uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:uk.ac.ebi.chebi.ontology.core.buffer.AtomBuffer)
  }
  
  public static final class BondBuffer extends
      com.google.protobuf.GeneratedMessage {
    // Use BondBuffer.newBuilder() to construct.
    private BondBuffer() {
      initFields();
    }
    private BondBuffer(boolean noInit) {}
    
    private static final BondBuffer defaultInstance;
    public static BondBuffer getDefaultInstance() {
      return defaultInstance;
    }
    
    public BondBuffer getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_BondBuffer_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_BondBuffer_fieldAccessorTable;
    }
    
    public enum Order
        implements com.google.protobuf.ProtocolMessageEnum {
      SINGLE(0, 1),
      DOUBLE(1, 2),
      TRIPLE(2, 3),
      QUADRUPLE(3, 4),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Order valueOf(int value) {
        switch (value) {
          case 1: return SINGLE;
          case 2: return DOUBLE;
          case 3: return TRIPLE;
          case 4: return QUADRUPLE;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Order>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Order>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Order>() {
              public Order findValueByNumber(int number) {
                return Order.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Order[] VALUES = {
        SINGLE, DOUBLE, TRIPLE, QUADRUPLE, 
      };
      public static Order valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Order(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:uk.ac.ebi.chebi.ontology.core.buffer.BondBuffer.Order)
    }
    
    // repeated .uk.ac.ebi.chebi.ontology.core.buffer.AtomBuffer atom = 1;
    public static final int ATOM_FIELD_NUMBER = 1;
    private java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer> atom_ =
      java.util.Collections.emptyList();
    public java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer> getAtomList() {
      return atom_;
    }
    public int getAtomCount() { return atom_.size(); }
    public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer getAtom(int index) {
      return atom_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer element : getAtomList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer element : getAtomList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer element : getAtomList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer result;
      
      // Construct using uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer();
        return builder;
      }
      
      protected uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer.getDescriptor();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer getDefaultInstanceForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.atom_ != java.util.Collections.EMPTY_LIST) {
          result.atom_ =
            java.util.Collections.unmodifiableList(result.atom_);
        }
        uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer) {
          return mergeFrom((uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer other) {
        if (other == uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer.getDefaultInstance()) return this;
        if (!other.atom_.isEmpty()) {
          if (result.atom_.isEmpty()) {
            result.atom_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer>();
          }
          result.atom_.addAll(other.atom_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.Builder subBuilder = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAtom(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .uk.ac.ebi.chebi.ontology.core.buffer.AtomBuffer atom = 1;
      public java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer> getAtomList() {
        return java.util.Collections.unmodifiableList(result.atom_);
      }
      public int getAtomCount() {
        return result.getAtomCount();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer getAtom(int index) {
        return result.getAtom(index);
      }
      public Builder setAtom(int index, uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.atom_.set(index, value);
        return this;
      }
      public Builder setAtom(int index, uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.Builder builderForValue) {
        result.atom_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAtom(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.atom_.isEmpty()) {
          result.atom_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer>();
        }
        result.atom_.add(value);
        return this;
      }
      public Builder addAtom(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.Builder builderForValue) {
        if (result.atom_.isEmpty()) {
          result.atom_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer>();
        }
        result.atom_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAtom(
          java.lang.Iterable<? extends uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer> values) {
        if (result.atom_.isEmpty()) {
          result.atom_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer>();
        }
        super.addAll(values, result.atom_);
        return this;
      }
      public Builder clearAtom() {
        result.atom_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:uk.ac.ebi.chebi.ontology.core.buffer.BondBuffer)
    }
    
    static {
      defaultInstance = new BondBuffer(true);
      uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:uk.ac.ebi.chebi.ontology.core.buffer.BondBuffer)
  }
  
  public static final class AtomContainerBuffer extends
      com.google.protobuf.GeneratedMessage {
    // Use AtomContainerBuffer.newBuilder() to construct.
    private AtomContainerBuffer() {
      initFields();
    }
    private AtomContainerBuffer(boolean noInit) {}
    
    private static final AtomContainerBuffer defaultInstance;
    public static AtomContainerBuffer getDefaultInstance() {
      return defaultInstance;
    }
    
    public AtomContainerBuffer getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AtomContainerBuffer_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AtomContainerBuffer_fieldAccessorTable;
    }
    
    public enum AtomContainerType
        implements com.google.protobuf.ProtocolMessageEnum {
      skeleton(0, 1),
      attached_group(1, 2),
      arbitrary_part(2, 3),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static AtomContainerType valueOf(int value) {
        switch (value) {
          case 1: return skeleton;
          case 2: return attached_group;
          case 3: return arbitrary_part;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<AtomContainerType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<AtomContainerType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AtomContainerType>() {
              public AtomContainerType findValueByNumber(int number) {
                return AtomContainerType.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final AtomContainerType[] VALUES = {
        skeleton, attached_group, arbitrary_part, 
      };
      public static AtomContainerType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private AtomContainerType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:uk.ac.ebi.chebi.ontology.core.buffer.AtomContainerBuffer.AtomContainerType)
    }
    
    // repeated .uk.ac.ebi.chebi.ontology.core.buffer.AtomBuffer atom = 1;
    public static final int ATOM_FIELD_NUMBER = 1;
    private java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer> atom_ =
      java.util.Collections.emptyList();
    public java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer> getAtomList() {
      return atom_;
    }
    public int getAtomCount() { return atom_.size(); }
    public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer getAtom(int index) {
      return atom_.get(index);
    }
    
    // repeated .uk.ac.ebi.chebi.ontology.core.buffer.BondBuffer bond = 2;
    public static final int BOND_FIELD_NUMBER = 2;
    private java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer> bond_ =
      java.util.Collections.emptyList();
    public java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer> getBondList() {
      return bond_;
    }
    public int getBondCount() { return bond_.size(); }
    public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer getBond(int index) {
      return bond_.get(index);
    }
    
    // optional .uk.ac.ebi.chebi.ontology.core.buffer.AtomContainerBuffer.AtomContainerType atomContainerType = 21;
    public static final int ATOMCONTAINERTYPE_FIELD_NUMBER = 21;
    private boolean hasAtomContainerType;
    private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.AtomContainerType atomContainerType_;
    public boolean hasAtomContainerType() { return hasAtomContainerType; }
    public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.AtomContainerType getAtomContainerType() { return atomContainerType_; }
    
    // optional bool isAromatic = 8;
    public static final int ISAROMATIC_FIELD_NUMBER = 8;
    private boolean hasIsAromatic;
    private boolean isAromatic_ = false;
    public boolean hasIsAromatic() { return hasIsAromatic; }
    public boolean getIsAromatic() { return isAromatic_; }
    
    // optional bool isBranch = 18;
    public static final int ISBRANCH_FIELD_NUMBER = 18;
    private boolean hasIsBranch;
    private boolean isBranch_ = false;
    public boolean hasIsBranch() { return hasIsBranch; }
    public boolean getIsBranch() { return isBranch_; }
    
    // optional bool isLinear = 28;
    public static final int ISLINEAR_FIELD_NUMBER = 28;
    private boolean hasIsLinear;
    private boolean isLinear_ = false;
    public boolean hasIsLinear() { return hasIsLinear; }
    public boolean getIsLinear() { return isLinear_; }
    
    // optional bool isCylic = 38;
    public static final int ISCYLIC_FIELD_NUMBER = 38;
    private boolean hasIsCylic;
    private boolean isCylic_ = false;
    public boolean hasIsCylic() { return hasIsCylic; }
    public boolean getIsCylic() { return isCylic_; }
    
    // optional int32 charge = 48;
    public static final int CHARGE_FIELD_NUMBER = 48;
    private boolean hasCharge;
    private int charge_ = 0;
    public boolean hasCharge() { return hasCharge; }
    public int getCharge() { return charge_; }
    
    // optional int32 minRepeatCount = 9;
    public static final int MINREPEATCOUNT_FIELD_NUMBER = 9;
    private boolean hasMinRepeatCount;
    private int minRepeatCount_ = 0;
    public boolean hasMinRepeatCount() { return hasMinRepeatCount; }
    public int getMinRepeatCount() { return minRepeatCount_; }
    
    // optional int32 maxRepeatCount = 19;
    public static final int MAXREPEATCOUNT_FIELD_NUMBER = 19;
    private boolean hasMaxRepeatCount;
    private int maxRepeatCount_ = 0;
    public boolean hasMaxRepeatCount() { return hasMaxRepeatCount; }
    public int getMaxRepeatCount() { return maxRepeatCount_; }
    
    // optional .uk.ac.ebi.chebi.ontology.core.buffer.Formula formula = 20;
    public static final int FORMULA_FIELD_NUMBER = 20;
    private boolean hasFormula;
    private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula formula_;
    public boolean hasFormula() { return hasFormula; }
    public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula getFormula() { return formula_; }
    
    private void initFields() {
      atomContainerType_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.AtomContainerType.skeleton;
      formula_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.getDefaultInstance();
    }
    public final boolean isInitialized() {
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer element : getAtomList()) {
        if (!element.isInitialized()) return false;
      }
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer element : getBondList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer element : getAtomList()) {
        output.writeMessage(1, element);
      }
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer element : getBondList()) {
        output.writeMessage(2, element);
      }
      if (hasIsAromatic()) {
        output.writeBool(8, getIsAromatic());
      }
      if (hasMinRepeatCount()) {
        output.writeInt32(9, getMinRepeatCount());
      }
      if (hasIsBranch()) {
        output.writeBool(18, getIsBranch());
      }
      if (hasMaxRepeatCount()) {
        output.writeInt32(19, getMaxRepeatCount());
      }
      if (hasFormula()) {
        output.writeMessage(20, getFormula());
      }
      if (hasAtomContainerType()) {
        output.writeEnum(21, getAtomContainerType().getNumber());
      }
      if (hasIsLinear()) {
        output.writeBool(28, getIsLinear());
      }
      if (hasIsCylic()) {
        output.writeBool(38, getIsCylic());
      }
      if (hasCharge()) {
        output.writeInt32(48, getCharge());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer element : getAtomList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer element : getBondList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      if (hasIsAromatic()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, getIsAromatic());
      }
      if (hasMinRepeatCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, getMinRepeatCount());
      }
      if (hasIsBranch()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, getIsBranch());
      }
      if (hasMaxRepeatCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, getMaxRepeatCount());
      }
      if (hasFormula()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getFormula());
      }
      if (hasAtomContainerType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(21, getAtomContainerType().getNumber());
      }
      if (hasIsLinear()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(28, getIsLinear());
      }
      if (hasIsCylic()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(38, getIsCylic());
      }
      if (hasCharge()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(48, getCharge());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer result;
      
      // Construct using uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer();
        return builder;
      }
      
      protected uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.getDescriptor();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer getDefaultInstanceForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.atom_ != java.util.Collections.EMPTY_LIST) {
          result.atom_ =
            java.util.Collections.unmodifiableList(result.atom_);
        }
        if (result.bond_ != java.util.Collections.EMPTY_LIST) {
          result.bond_ =
            java.util.Collections.unmodifiableList(result.bond_);
        }
        uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer) {
          return mergeFrom((uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer other) {
        if (other == uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.getDefaultInstance()) return this;
        if (!other.atom_.isEmpty()) {
          if (result.atom_.isEmpty()) {
            result.atom_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer>();
          }
          result.atom_.addAll(other.atom_);
        }
        if (!other.bond_.isEmpty()) {
          if (result.bond_.isEmpty()) {
            result.bond_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer>();
          }
          result.bond_.addAll(other.bond_);
        }
        if (other.hasAtomContainerType()) {
          setAtomContainerType(other.getAtomContainerType());
        }
        if (other.hasIsAromatic()) {
          setIsAromatic(other.getIsAromatic());
        }
        if (other.hasIsBranch()) {
          setIsBranch(other.getIsBranch());
        }
        if (other.hasIsLinear()) {
          setIsLinear(other.getIsLinear());
        }
        if (other.hasIsCylic()) {
          setIsCylic(other.getIsCylic());
        }
        if (other.hasCharge()) {
          setCharge(other.getCharge());
        }
        if (other.hasMinRepeatCount()) {
          setMinRepeatCount(other.getMinRepeatCount());
        }
        if (other.hasMaxRepeatCount()) {
          setMaxRepeatCount(other.getMaxRepeatCount());
        }
        if (other.hasFormula()) {
          mergeFormula(other.getFormula());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.Builder subBuilder = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAtom(subBuilder.buildPartial());
              break;
            }
            case 18: {
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer.Builder subBuilder = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBond(subBuilder.buildPartial());
              break;
            }
            case 64: {
              setIsAromatic(input.readBool());
              break;
            }
            case 72: {
              setMinRepeatCount(input.readInt32());
              break;
            }
            case 144: {
              setIsBranch(input.readBool());
              break;
            }
            case 152: {
              setMaxRepeatCount(input.readInt32());
              break;
            }
            case 162: {
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Builder subBuilder = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.newBuilder();
              if (hasFormula()) {
                subBuilder.mergeFrom(getFormula());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFormula(subBuilder.buildPartial());
              break;
            }
            case 168: {
              int rawValue = input.readEnum();
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.AtomContainerType value = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.AtomContainerType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(21, rawValue);
              } else {
                setAtomContainerType(value);
              }
              break;
            }
            case 224: {
              setIsLinear(input.readBool());
              break;
            }
            case 304: {
              setIsCylic(input.readBool());
              break;
            }
            case 384: {
              setCharge(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // repeated .uk.ac.ebi.chebi.ontology.core.buffer.AtomBuffer atom = 1;
      public java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer> getAtomList() {
        return java.util.Collections.unmodifiableList(result.atom_);
      }
      public int getAtomCount() {
        return result.getAtomCount();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer getAtom(int index) {
        return result.getAtom(index);
      }
      public Builder setAtom(int index, uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.atom_.set(index, value);
        return this;
      }
      public Builder setAtom(int index, uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.Builder builderForValue) {
        result.atom_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAtom(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.atom_.isEmpty()) {
          result.atom_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer>();
        }
        result.atom_.add(value);
        return this;
      }
      public Builder addAtom(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.Builder builderForValue) {
        if (result.atom_.isEmpty()) {
          result.atom_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer>();
        }
        result.atom_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAtom(
          java.lang.Iterable<? extends uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer> values) {
        if (result.atom_.isEmpty()) {
          result.atom_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer>();
        }
        super.addAll(values, result.atom_);
        return this;
      }
      public Builder clearAtom() {
        result.atom_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .uk.ac.ebi.chebi.ontology.core.buffer.BondBuffer bond = 2;
      public java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer> getBondList() {
        return java.util.Collections.unmodifiableList(result.bond_);
      }
      public int getBondCount() {
        return result.getBondCount();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer getBond(int index) {
        return result.getBond(index);
      }
      public Builder setBond(int index, uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.bond_.set(index, value);
        return this;
      }
      public Builder setBond(int index, uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer.Builder builderForValue) {
        result.bond_.set(index, builderForValue.build());
        return this;
      }
      public Builder addBond(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.bond_.isEmpty()) {
          result.bond_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer>();
        }
        result.bond_.add(value);
        return this;
      }
      public Builder addBond(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer.Builder builderForValue) {
        if (result.bond_.isEmpty()) {
          result.bond_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer>();
        }
        result.bond_.add(builderForValue.build());
        return this;
      }
      public Builder addAllBond(
          java.lang.Iterable<? extends uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer> values) {
        if (result.bond_.isEmpty()) {
          result.bond_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer>();
        }
        super.addAll(values, result.bond_);
        return this;
      }
      public Builder clearBond() {
        result.bond_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .uk.ac.ebi.chebi.ontology.core.buffer.AtomContainerBuffer.AtomContainerType atomContainerType = 21;
      public boolean hasAtomContainerType() {
        return result.hasAtomContainerType();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.AtomContainerType getAtomContainerType() {
        return result.getAtomContainerType();
      }
      public Builder setAtomContainerType(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.AtomContainerType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAtomContainerType = true;
        result.atomContainerType_ = value;
        return this;
      }
      public Builder clearAtomContainerType() {
        result.hasAtomContainerType = false;
        result.atomContainerType_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.AtomContainerType.skeleton;
        return this;
      }
      
      // optional bool isAromatic = 8;
      public boolean hasIsAromatic() {
        return result.hasIsAromatic();
      }
      public boolean getIsAromatic() {
        return result.getIsAromatic();
      }
      public Builder setIsAromatic(boolean value) {
        result.hasIsAromatic = true;
        result.isAromatic_ = value;
        return this;
      }
      public Builder clearIsAromatic() {
        result.hasIsAromatic = false;
        result.isAromatic_ = false;
        return this;
      }
      
      // optional bool isBranch = 18;
      public boolean hasIsBranch() {
        return result.hasIsBranch();
      }
      public boolean getIsBranch() {
        return result.getIsBranch();
      }
      public Builder setIsBranch(boolean value) {
        result.hasIsBranch = true;
        result.isBranch_ = value;
        return this;
      }
      public Builder clearIsBranch() {
        result.hasIsBranch = false;
        result.isBranch_ = false;
        return this;
      }
      
      // optional bool isLinear = 28;
      public boolean hasIsLinear() {
        return result.hasIsLinear();
      }
      public boolean getIsLinear() {
        return result.getIsLinear();
      }
      public Builder setIsLinear(boolean value) {
        result.hasIsLinear = true;
        result.isLinear_ = value;
        return this;
      }
      public Builder clearIsLinear() {
        result.hasIsLinear = false;
        result.isLinear_ = false;
        return this;
      }
      
      // optional bool isCylic = 38;
      public boolean hasIsCylic() {
        return result.hasIsCylic();
      }
      public boolean getIsCylic() {
        return result.getIsCylic();
      }
      public Builder setIsCylic(boolean value) {
        result.hasIsCylic = true;
        result.isCylic_ = value;
        return this;
      }
      public Builder clearIsCylic() {
        result.hasIsCylic = false;
        result.isCylic_ = false;
        return this;
      }
      
      // optional int32 charge = 48;
      public boolean hasCharge() {
        return result.hasCharge();
      }
      public int getCharge() {
        return result.getCharge();
      }
      public Builder setCharge(int value) {
        result.hasCharge = true;
        result.charge_ = value;
        return this;
      }
      public Builder clearCharge() {
        result.hasCharge = false;
        result.charge_ = 0;
        return this;
      }
      
      // optional int32 minRepeatCount = 9;
      public boolean hasMinRepeatCount() {
        return result.hasMinRepeatCount();
      }
      public int getMinRepeatCount() {
        return result.getMinRepeatCount();
      }
      public Builder setMinRepeatCount(int value) {
        result.hasMinRepeatCount = true;
        result.minRepeatCount_ = value;
        return this;
      }
      public Builder clearMinRepeatCount() {
        result.hasMinRepeatCount = false;
        result.minRepeatCount_ = 0;
        return this;
      }
      
      // optional int32 maxRepeatCount = 19;
      public boolean hasMaxRepeatCount() {
        return result.hasMaxRepeatCount();
      }
      public int getMaxRepeatCount() {
        return result.getMaxRepeatCount();
      }
      public Builder setMaxRepeatCount(int value) {
        result.hasMaxRepeatCount = true;
        result.maxRepeatCount_ = value;
        return this;
      }
      public Builder clearMaxRepeatCount() {
        result.hasMaxRepeatCount = false;
        result.maxRepeatCount_ = 0;
        return this;
      }
      
      // optional .uk.ac.ebi.chebi.ontology.core.buffer.Formula formula = 20;
      public boolean hasFormula() {
        return result.hasFormula();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula getFormula() {
        return result.getFormula();
      }
      public Builder setFormula(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFormula = true;
        result.formula_ = value;
        return this;
      }
      public Builder setFormula(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Builder builderForValue) {
        result.hasFormula = true;
        result.formula_ = builderForValue.build();
        return this;
      }
      public Builder mergeFormula(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula value) {
        if (result.hasFormula() &&
            result.formula_ != uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.getDefaultInstance()) {
          result.formula_ =
            uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.newBuilder(result.formula_).mergeFrom(value).buildPartial();
        } else {
          result.formula_ = value;
        }
        result.hasFormula = true;
        return this;
      }
      public Builder clearFormula() {
        result.hasFormula = false;
        result.formula_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:uk.ac.ebi.chebi.ontology.core.buffer.AtomContainerBuffer)
    }
    
    static {
      defaultInstance = new AtomContainerBuffer(true);
      uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:uk.ac.ebi.chebi.ontology.core.buffer.AtomContainerBuffer)
  }
  
  public static final class DefinitionUnit extends
      com.google.protobuf.GeneratedMessage {
    // Use DefinitionUnit.newBuilder() to construct.
    private DefinitionUnit() {
      initFields();
    }
    private DefinitionUnit(boolean noInit) {}
    
    private static final DefinitionUnit defaultInstance;
    public static DefinitionUnit getDefaultInstance() {
      return defaultInstance;
    }
    
    public DefinitionUnit getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_DefinitionUnit_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_DefinitionUnit_fieldAccessorTable;
    }
    
    // optional .uk.ac.ebi.chebi.ontology.core.buffer.AtomContainerBuffer skeleton = 2;
    public static final int SKELETON_FIELD_NUMBER = 2;
    private boolean hasSkeleton;
    private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer skeleton_;
    public boolean hasSkeleton() { return hasSkeleton; }
    public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer getSkeleton() { return skeleton_; }
    
    // repeated .uk.ac.ebi.chebi.ontology.core.buffer.AtomContainerBuffer attachedGroups = 1;
    public static final int ATTACHEDGROUPS_FIELD_NUMBER = 1;
    private java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer> attachedGroups_ =
      java.util.Collections.emptyList();
    public java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer> getAttachedGroupsList() {
      return attachedGroups_;
    }
    public int getAttachedGroupsCount() { return attachedGroups_.size(); }
    public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer getAttachedGroups(int index) {
      return attachedGroups_.get(index);
    }
    
    // repeated .uk.ac.ebi.chebi.ontology.core.buffer.AtomContainerBuffer arbitrary_part = 11;
    public static final int ARBITRARY_PART_FIELD_NUMBER = 11;
    private java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer> arbitraryPart_ =
      java.util.Collections.emptyList();
    public java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer> getArbitraryPartList() {
      return arbitraryPart_;
    }
    public int getArbitraryPartCount() { return arbitraryPart_.size(); }
    public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer getArbitraryPart(int index) {
      return arbitraryPart_.get(index);
    }
    
    // repeated .uk.ac.ebi.chebi.ontology.core.buffer.Attachment attachments = 3;
    public static final int ATTACHMENTS_FIELD_NUMBER = 3;
    private java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment> attachments_ =
      java.util.Collections.emptyList();
    public java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment> getAttachmentsList() {
      return attachments_;
    }
    public int getAttachmentsCount() { return attachments_.size(); }
    public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment getAttachments(int index) {
      return attachments_.get(index);
    }
    
    // optional .uk.ac.ebi.chebi.ontology.core.buffer.Formula formula = 20;
    public static final int FORMULA_FIELD_NUMBER = 20;
    private boolean hasFormula;
    private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula formula_;
    public boolean hasFormula() { return hasFormula; }
    public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula getFormula() { return formula_; }
    
    private void initFields() {
      skeleton_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.getDefaultInstance();
      formula_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasSkeleton()) {
        if (!getSkeleton().isInitialized()) return false;
      }
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer element : getAttachedGroupsList()) {
        if (!element.isInitialized()) return false;
      }
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer element : getArbitraryPartList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer element : getAttachedGroupsList()) {
        output.writeMessage(1, element);
      }
      if (hasSkeleton()) {
        output.writeMessage(2, getSkeleton());
      }
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment element : getAttachmentsList()) {
        output.writeMessage(3, element);
      }
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer element : getArbitraryPartList()) {
        output.writeMessage(11, element);
      }
      if (hasFormula()) {
        output.writeMessage(20, getFormula());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer element : getAttachedGroupsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasSkeleton()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSkeleton());
      }
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment element : getAttachmentsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer element : getArbitraryPartList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, element);
      }
      if (hasFormula()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getFormula());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit result;
      
      // Construct using uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit();
        return builder;
      }
      
      protected uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit.getDescriptor();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit getDefaultInstanceForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.attachedGroups_ != java.util.Collections.EMPTY_LIST) {
          result.attachedGroups_ =
            java.util.Collections.unmodifiableList(result.attachedGroups_);
        }
        if (result.arbitraryPart_ != java.util.Collections.EMPTY_LIST) {
          result.arbitraryPart_ =
            java.util.Collections.unmodifiableList(result.arbitraryPart_);
        }
        if (result.attachments_ != java.util.Collections.EMPTY_LIST) {
          result.attachments_ =
            java.util.Collections.unmodifiableList(result.attachments_);
        }
        uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit) {
          return mergeFrom((uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit other) {
        if (other == uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit.getDefaultInstance()) return this;
        if (other.hasSkeleton()) {
          mergeSkeleton(other.getSkeleton());
        }
        if (!other.attachedGroups_.isEmpty()) {
          if (result.attachedGroups_.isEmpty()) {
            result.attachedGroups_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer>();
          }
          result.attachedGroups_.addAll(other.attachedGroups_);
        }
        if (!other.arbitraryPart_.isEmpty()) {
          if (result.arbitraryPart_.isEmpty()) {
            result.arbitraryPart_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer>();
          }
          result.arbitraryPart_.addAll(other.arbitraryPart_);
        }
        if (!other.attachments_.isEmpty()) {
          if (result.attachments_.isEmpty()) {
            result.attachments_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment>();
          }
          result.attachments_.addAll(other.attachments_);
        }
        if (other.hasFormula()) {
          mergeFormula(other.getFormula());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.Builder subBuilder = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttachedGroups(subBuilder.buildPartial());
              break;
            }
            case 18: {
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.Builder subBuilder = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.newBuilder();
              if (hasSkeleton()) {
                subBuilder.mergeFrom(getSkeleton());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSkeleton(subBuilder.buildPartial());
              break;
            }
            case 26: {
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment.Builder subBuilder = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttachments(subBuilder.buildPartial());
              break;
            }
            case 90: {
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.Builder subBuilder = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addArbitraryPart(subBuilder.buildPartial());
              break;
            }
            case 162: {
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Builder subBuilder = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.newBuilder();
              if (hasFormula()) {
                subBuilder.mergeFrom(getFormula());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFormula(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .uk.ac.ebi.chebi.ontology.core.buffer.AtomContainerBuffer skeleton = 2;
      public boolean hasSkeleton() {
        return result.hasSkeleton();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer getSkeleton() {
        return result.getSkeleton();
      }
      public Builder setSkeleton(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSkeleton = true;
        result.skeleton_ = value;
        return this;
      }
      public Builder setSkeleton(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.Builder builderForValue) {
        result.hasSkeleton = true;
        result.skeleton_ = builderForValue.build();
        return this;
      }
      public Builder mergeSkeleton(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer value) {
        if (result.hasSkeleton() &&
            result.skeleton_ != uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.getDefaultInstance()) {
          result.skeleton_ =
            uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.newBuilder(result.skeleton_).mergeFrom(value).buildPartial();
        } else {
          result.skeleton_ = value;
        }
        result.hasSkeleton = true;
        return this;
      }
      public Builder clearSkeleton() {
        result.hasSkeleton = false;
        result.skeleton_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.getDefaultInstance();
        return this;
      }
      
      // repeated .uk.ac.ebi.chebi.ontology.core.buffer.AtomContainerBuffer attachedGroups = 1;
      public java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer> getAttachedGroupsList() {
        return java.util.Collections.unmodifiableList(result.attachedGroups_);
      }
      public int getAttachedGroupsCount() {
        return result.getAttachedGroupsCount();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer getAttachedGroups(int index) {
        return result.getAttachedGroups(index);
      }
      public Builder setAttachedGroups(int index, uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.attachedGroups_.set(index, value);
        return this;
      }
      public Builder setAttachedGroups(int index, uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.Builder builderForValue) {
        result.attachedGroups_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAttachedGroups(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.attachedGroups_.isEmpty()) {
          result.attachedGroups_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer>();
        }
        result.attachedGroups_.add(value);
        return this;
      }
      public Builder addAttachedGroups(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.Builder builderForValue) {
        if (result.attachedGroups_.isEmpty()) {
          result.attachedGroups_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer>();
        }
        result.attachedGroups_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAttachedGroups(
          java.lang.Iterable<? extends uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer> values) {
        if (result.attachedGroups_.isEmpty()) {
          result.attachedGroups_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer>();
        }
        super.addAll(values, result.attachedGroups_);
        return this;
      }
      public Builder clearAttachedGroups() {
        result.attachedGroups_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .uk.ac.ebi.chebi.ontology.core.buffer.AtomContainerBuffer arbitrary_part = 11;
      public java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer> getArbitraryPartList() {
        return java.util.Collections.unmodifiableList(result.arbitraryPart_);
      }
      public int getArbitraryPartCount() {
        return result.getArbitraryPartCount();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer getArbitraryPart(int index) {
        return result.getArbitraryPart(index);
      }
      public Builder setArbitraryPart(int index, uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.arbitraryPart_.set(index, value);
        return this;
      }
      public Builder setArbitraryPart(int index, uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.Builder builderForValue) {
        result.arbitraryPart_.set(index, builderForValue.build());
        return this;
      }
      public Builder addArbitraryPart(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.arbitraryPart_.isEmpty()) {
          result.arbitraryPart_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer>();
        }
        result.arbitraryPart_.add(value);
        return this;
      }
      public Builder addArbitraryPart(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.Builder builderForValue) {
        if (result.arbitraryPart_.isEmpty()) {
          result.arbitraryPart_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer>();
        }
        result.arbitraryPart_.add(builderForValue.build());
        return this;
      }
      public Builder addAllArbitraryPart(
          java.lang.Iterable<? extends uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer> values) {
        if (result.arbitraryPart_.isEmpty()) {
          result.arbitraryPart_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer>();
        }
        super.addAll(values, result.arbitraryPart_);
        return this;
      }
      public Builder clearArbitraryPart() {
        result.arbitraryPart_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .uk.ac.ebi.chebi.ontology.core.buffer.Attachment attachments = 3;
      public java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment> getAttachmentsList() {
        return java.util.Collections.unmodifiableList(result.attachments_);
      }
      public int getAttachmentsCount() {
        return result.getAttachmentsCount();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment getAttachments(int index) {
        return result.getAttachments(index);
      }
      public Builder setAttachments(int index, uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.attachments_.set(index, value);
        return this;
      }
      public Builder setAttachments(int index, uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment.Builder builderForValue) {
        result.attachments_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAttachments(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.attachments_.isEmpty()) {
          result.attachments_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment>();
        }
        result.attachments_.add(value);
        return this;
      }
      public Builder addAttachments(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment.Builder builderForValue) {
        if (result.attachments_.isEmpty()) {
          result.attachments_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment>();
        }
        result.attachments_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAttachments(
          java.lang.Iterable<? extends uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment> values) {
        if (result.attachments_.isEmpty()) {
          result.attachments_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment>();
        }
        super.addAll(values, result.attachments_);
        return this;
      }
      public Builder clearAttachments() {
        result.attachments_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .uk.ac.ebi.chebi.ontology.core.buffer.Formula formula = 20;
      public boolean hasFormula() {
        return result.hasFormula();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula getFormula() {
        return result.getFormula();
      }
      public Builder setFormula(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFormula = true;
        result.formula_ = value;
        return this;
      }
      public Builder setFormula(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Builder builderForValue) {
        result.hasFormula = true;
        result.formula_ = builderForValue.build();
        return this;
      }
      public Builder mergeFormula(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula value) {
        if (result.hasFormula() &&
            result.formula_ != uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.getDefaultInstance()) {
          result.formula_ =
            uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.newBuilder(result.formula_).mergeFrom(value).buildPartial();
        } else {
          result.formula_ = value;
        }
        result.hasFormula = true;
        return this;
      }
      public Builder clearFormula() {
        result.hasFormula = false;
        result.formula_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:uk.ac.ebi.chebi.ontology.core.buffer.DefinitionUnit)
    }
    
    static {
      defaultInstance = new DefinitionUnit(true);
      uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:uk.ac.ebi.chebi.ontology.core.buffer.DefinitionUnit)
  }
  
  public static final class Definition extends
      com.google.protobuf.GeneratedMessage {
    // Use Definition.newBuilder() to construct.
    private Definition() {
      initFields();
    }
    private Definition(boolean noInit) {}
    
    private static final Definition defaultInstance;
    public static Definition getDefaultInstance() {
      return defaultInstance;
    }
    
    public Definition getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Definition_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Definition_fieldAccessorTable;
    }
    
    // repeated .uk.ac.ebi.chebi.ontology.core.buffer.DefinitionUnit definitionUnits = 1;
    public static final int DEFINITIONUNITS_FIELD_NUMBER = 1;
    private java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit> definitionUnits_ =
      java.util.Collections.emptyList();
    public java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit> getDefinitionUnitsList() {
      return definitionUnits_;
    }
    public int getDefinitionUnitsCount() { return definitionUnits_.size(); }
    public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit getDefinitionUnits(int index) {
      return definitionUnits_.get(index);
    }
    
    // optional .uk.ac.ebi.chebi.ontology.core.buffer.Definition child1 = 2;
    public static final int CHILD1_FIELD_NUMBER = 2;
    private boolean hasChild1;
    private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition child1_;
    public boolean hasChild1() { return hasChild1; }
    public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition getChild1() { return child1_; }
    
    // optional .uk.ac.ebi.chebi.ontology.core.buffer.Definition child2 = 3;
    public static final int CHILD2_FIELD_NUMBER = 3;
    private boolean hasChild2;
    private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition child2_;
    public boolean hasChild2() { return hasChild2; }
    public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition getChild2() { return child2_; }
    
    // optional string operator = 4;
    public static final int OPERATOR_FIELD_NUMBER = 4;
    private boolean hasOperator;
    private java.lang.String operator_ = "";
    public boolean hasOperator() { return hasOperator; }
    public java.lang.String getOperator() { return operator_; }
    
    private void initFields() {
      child1_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.getDefaultInstance();
      child2_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.getDefaultInstance();
    }
    public final boolean isInitialized() {
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit element : getDefinitionUnitsList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasChild1()) {
        if (!getChild1().isInitialized()) return false;
      }
      if (hasChild2()) {
        if (!getChild2().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit element : getDefinitionUnitsList()) {
        output.writeMessage(1, element);
      }
      if (hasChild1()) {
        output.writeMessage(2, getChild1());
      }
      if (hasChild2()) {
        output.writeMessage(3, getChild2());
      }
      if (hasOperator()) {
        output.writeString(4, getOperator());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit element : getDefinitionUnitsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasChild1()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getChild1());
      }
      if (hasChild2()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getChild2());
      }
      if (hasOperator()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getOperator());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition result;
      
      // Construct using uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition();
        return builder;
      }
      
      protected uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.getDescriptor();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition getDefaultInstanceForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.definitionUnits_ != java.util.Collections.EMPTY_LIST) {
          result.definitionUnits_ =
            java.util.Collections.unmodifiableList(result.definitionUnits_);
        }
        uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition) {
          return mergeFrom((uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition other) {
        if (other == uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.getDefaultInstance()) return this;
        if (!other.definitionUnits_.isEmpty()) {
          if (result.definitionUnits_.isEmpty()) {
            result.definitionUnits_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit>();
          }
          result.definitionUnits_.addAll(other.definitionUnits_);
        }
        if (other.hasChild1()) {
          mergeChild1(other.getChild1());
        }
        if (other.hasChild2()) {
          mergeChild2(other.getChild2());
        }
        if (other.hasOperator()) {
          setOperator(other.getOperator());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit.Builder subBuilder = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addDefinitionUnits(subBuilder.buildPartial());
              break;
            }
            case 18: {
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.Builder subBuilder = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.newBuilder();
              if (hasChild1()) {
                subBuilder.mergeFrom(getChild1());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChild1(subBuilder.buildPartial());
              break;
            }
            case 26: {
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.Builder subBuilder = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.newBuilder();
              if (hasChild2()) {
                subBuilder.mergeFrom(getChild2());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChild2(subBuilder.buildPartial());
              break;
            }
            case 34: {
              setOperator(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated .uk.ac.ebi.chebi.ontology.core.buffer.DefinitionUnit definitionUnits = 1;
      public java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit> getDefinitionUnitsList() {
        return java.util.Collections.unmodifiableList(result.definitionUnits_);
      }
      public int getDefinitionUnitsCount() {
        return result.getDefinitionUnitsCount();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit getDefinitionUnits(int index) {
        return result.getDefinitionUnits(index);
      }
      public Builder setDefinitionUnits(int index, uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.definitionUnits_.set(index, value);
        return this;
      }
      public Builder setDefinitionUnits(int index, uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit.Builder builderForValue) {
        result.definitionUnits_.set(index, builderForValue.build());
        return this;
      }
      public Builder addDefinitionUnits(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.definitionUnits_.isEmpty()) {
          result.definitionUnits_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit>();
        }
        result.definitionUnits_.add(value);
        return this;
      }
      public Builder addDefinitionUnits(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit.Builder builderForValue) {
        if (result.definitionUnits_.isEmpty()) {
          result.definitionUnits_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit>();
        }
        result.definitionUnits_.add(builderForValue.build());
        return this;
      }
      public Builder addAllDefinitionUnits(
          java.lang.Iterable<? extends uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit> values) {
        if (result.definitionUnits_.isEmpty()) {
          result.definitionUnits_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit>();
        }
        super.addAll(values, result.definitionUnits_);
        return this;
      }
      public Builder clearDefinitionUnits() {
        result.definitionUnits_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .uk.ac.ebi.chebi.ontology.core.buffer.Definition child1 = 2;
      public boolean hasChild1() {
        return result.hasChild1();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition getChild1() {
        return result.getChild1();
      }
      public Builder setChild1(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChild1 = true;
        result.child1_ = value;
        return this;
      }
      public Builder setChild1(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.Builder builderForValue) {
        result.hasChild1 = true;
        result.child1_ = builderForValue.build();
        return this;
      }
      public Builder mergeChild1(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition value) {
        if (result.hasChild1() &&
            result.child1_ != uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.getDefaultInstance()) {
          result.child1_ =
            uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.newBuilder(result.child1_).mergeFrom(value).buildPartial();
        } else {
          result.child1_ = value;
        }
        result.hasChild1 = true;
        return this;
      }
      public Builder clearChild1() {
        result.hasChild1 = false;
        result.child1_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.getDefaultInstance();
        return this;
      }
      
      // optional .uk.ac.ebi.chebi.ontology.core.buffer.Definition child2 = 3;
      public boolean hasChild2() {
        return result.hasChild2();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition getChild2() {
        return result.getChild2();
      }
      public Builder setChild2(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChild2 = true;
        result.child2_ = value;
        return this;
      }
      public Builder setChild2(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.Builder builderForValue) {
        result.hasChild2 = true;
        result.child2_ = builderForValue.build();
        return this;
      }
      public Builder mergeChild2(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition value) {
        if (result.hasChild2() &&
            result.child2_ != uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.getDefaultInstance()) {
          result.child2_ =
            uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.newBuilder(result.child2_).mergeFrom(value).buildPartial();
        } else {
          result.child2_ = value;
        }
        result.hasChild2 = true;
        return this;
      }
      public Builder clearChild2() {
        result.hasChild2 = false;
        result.child2_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.getDefaultInstance();
        return this;
      }
      
      // optional string operator = 4;
      public boolean hasOperator() {
        return result.hasOperator();
      }
      public java.lang.String getOperator() {
        return result.getOperator();
      }
      public Builder setOperator(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasOperator = true;
        result.operator_ = value;
        return this;
      }
      public Builder clearOperator() {
        result.hasOperator = false;
        result.operator_ = getDefaultInstance().getOperator();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:uk.ac.ebi.chebi.ontology.core.buffer.Definition)
    }
    
    static {
      defaultInstance = new Definition(true);
      uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:uk.ac.ebi.chebi.ontology.core.buffer.Definition)
  }
  
  public static final class Formula extends
      com.google.protobuf.GeneratedMessage {
    // Use Formula.newBuilder() to construct.
    private Formula() {
      initFields();
    }
    private Formula(boolean noInit) {}
    
    private static final Formula defaultInstance;
    public static Formula getDefaultInstance() {
      return defaultInstance;
    }
    
    public Formula getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Formula_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Formula_fieldAccessorTable;
    }
    
    public static final class Element extends
        com.google.protobuf.GeneratedMessage {
      // Use Element.newBuilder() to construct.
      private Element() {
        initFields();
      }
      private Element(boolean noInit) {}
      
      private static final Element defaultInstance;
      public static Element getDefaultInstance() {
        return defaultInstance;
      }
      
      public Element getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Formula_Element_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Formula_Element_fieldAccessorTable;
      }
      
      // optional string symbol = 1;
      public static final int SYMBOL_FIELD_NUMBER = 1;
      private boolean hasSymbol;
      private java.lang.String symbol_ = "";
      public boolean hasSymbol() { return hasSymbol; }
      public java.lang.String getSymbol() { return symbol_; }
      
      // optional string countExpression = 2;
      public static final int COUNTEXPRESSION_FIELD_NUMBER = 2;
      private boolean hasCountExpression;
      private java.lang.String countExpression_ = "";
      public boolean hasCountExpression() { return hasCountExpression; }
      public java.lang.String getCountExpression() { return countExpression_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasSymbol()) {
          output.writeString(1, getSymbol());
        }
        if (hasCountExpression()) {
          output.writeString(2, getCountExpression());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasSymbol()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getSymbol());
        }
        if (hasCountExpression()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getCountExpression());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element result;
        
        // Construct using uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element();
          return builder;
        }
        
        protected uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element.getDescriptor();
        }
        
        public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element getDefaultInstanceForType() {
          return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element) {
            return mergeFrom((uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element other) {
          if (other == uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element.getDefaultInstance()) return this;
          if (other.hasSymbol()) {
            setSymbol(other.getSymbol());
          }
          if (other.hasCountExpression()) {
            setCountExpression(other.getCountExpression());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                setSymbol(input.readString());
                break;
              }
              case 18: {
                setCountExpression(input.readString());
                break;
              }
            }
          }
        }
        
        
        // optional string symbol = 1;
        public boolean hasSymbol() {
          return result.hasSymbol();
        }
        public java.lang.String getSymbol() {
          return result.getSymbol();
        }
        public Builder setSymbol(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasSymbol = true;
          result.symbol_ = value;
          return this;
        }
        public Builder clearSymbol() {
          result.hasSymbol = false;
          result.symbol_ = getDefaultInstance().getSymbol();
          return this;
        }
        
        // optional string countExpression = 2;
        public boolean hasCountExpression() {
          return result.hasCountExpression();
        }
        public java.lang.String getCountExpression() {
          return result.getCountExpression();
        }
        public Builder setCountExpression(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasCountExpression = true;
          result.countExpression_ = value;
          return this;
        }
        public Builder clearCountExpression() {
          result.hasCountExpression = false;
          result.countExpression_ = getDefaultInstance().getCountExpression();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:uk.ac.ebi.chebi.ontology.core.buffer.Formula.Element)
      }
      
      static {
        defaultInstance = new Element(true);
        uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:uk.ac.ebi.chebi.ontology.core.buffer.Formula.Element)
    }
    
    // repeated .uk.ac.ebi.chebi.ontology.core.buffer.Formula.Element elements = 1;
    public static final int ELEMENTS_FIELD_NUMBER = 1;
    private java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element> elements_ =
      java.util.Collections.emptyList();
    public java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element> getElementsList() {
      return elements_;
    }
    public int getElementsCount() { return elements_.size(); }
    public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element getElements(int index) {
      return elements_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element element : getElementsList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element element : getElementsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula result;
      
      // Construct using uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula();
        return builder;
      }
      
      protected uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.getDescriptor();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula getDefaultInstanceForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.elements_ != java.util.Collections.EMPTY_LIST) {
          result.elements_ =
            java.util.Collections.unmodifiableList(result.elements_);
        }
        uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula) {
          return mergeFrom((uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula other) {
        if (other == uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.getDefaultInstance()) return this;
        if (!other.elements_.isEmpty()) {
          if (result.elements_.isEmpty()) {
            result.elements_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element>();
          }
          result.elements_.addAll(other.elements_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element.Builder subBuilder = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addElements(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .uk.ac.ebi.chebi.ontology.core.buffer.Formula.Element elements = 1;
      public java.util.List<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element> getElementsList() {
        return java.util.Collections.unmodifiableList(result.elements_);
      }
      public int getElementsCount() {
        return result.getElementsCount();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element getElements(int index) {
        return result.getElements(index);
      }
      public Builder setElements(int index, uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.elements_.set(index, value);
        return this;
      }
      public Builder setElements(int index, uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element.Builder builderForValue) {
        result.elements_.set(index, builderForValue.build());
        return this;
      }
      public Builder addElements(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.elements_.isEmpty()) {
          result.elements_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element>();
        }
        result.elements_.add(value);
        return this;
      }
      public Builder addElements(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element.Builder builderForValue) {
        if (result.elements_.isEmpty()) {
          result.elements_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element>();
        }
        result.elements_.add(builderForValue.build());
        return this;
      }
      public Builder addAllElements(
          java.lang.Iterable<? extends uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element> values) {
        if (result.elements_.isEmpty()) {
          result.elements_ = new java.util.ArrayList<uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element>();
        }
        super.addAll(values, result.elements_);
        return this;
      }
      public Builder clearElements() {
        result.elements_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:uk.ac.ebi.chebi.ontology.core.buffer.Formula)
    }
    
    static {
      defaultInstance = new Formula(true);
      uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:uk.ac.ebi.chebi.ontology.core.buffer.Formula)
  }
  
  public static final class Attachment extends
      com.google.protobuf.GeneratedMessage {
    // Use Attachment.newBuilder() to construct.
    private Attachment() {
      initFields();
    }
    private Attachment(boolean noInit) {}
    
    private static final Attachment defaultInstance;
    public static Attachment getDefaultInstance() {
      return defaultInstance;
    }
    
    public Attachment getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Attachment_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Attachment_fieldAccessorTable;
    }
    
    // optional int32 attachGroupIndex = 3;
    public static final int ATTACHGROUPINDEX_FIELD_NUMBER = 3;
    private boolean hasAttachGroupIndex;
    private int attachGroupIndex_ = 0;
    public boolean hasAttachGroupIndex() { return hasAttachGroupIndex; }
    public int getAttachGroupIndex() { return attachGroupIndex_; }
    
    // optional int32 attachmentAtomIndex = 1;
    public static final int ATTACHMENTATOMINDEX_FIELD_NUMBER = 1;
    private boolean hasAttachmentAtomIndex;
    private int attachmentAtomIndex_ = 0;
    public boolean hasAttachmentAtomIndex() { return hasAttachmentAtomIndex; }
    public int getAttachmentAtomIndex() { return attachmentAtomIndex_; }
    
    // optional int32 skeletonAtomIndex = 2;
    public static final int SKELETONATOMINDEX_FIELD_NUMBER = 2;
    private boolean hasSkeletonAtomIndex;
    private int skeletonAtomIndex_ = 0;
    public boolean hasSkeletonAtomIndex() { return hasSkeletonAtomIndex; }
    public int getSkeletonAtomIndex() { return skeletonAtomIndex_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAttachmentAtomIndex()) {
        output.writeInt32(1, getAttachmentAtomIndex());
      }
      if (hasSkeletonAtomIndex()) {
        output.writeInt32(2, getSkeletonAtomIndex());
      }
      if (hasAttachGroupIndex()) {
        output.writeInt32(3, getAttachGroupIndex());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAttachmentAtomIndex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getAttachmentAtomIndex());
      }
      if (hasSkeletonAtomIndex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getSkeletonAtomIndex());
      }
      if (hasAttachGroupIndex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getAttachGroupIndex());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment result;
      
      // Construct using uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment();
        return builder;
      }
      
      protected uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment.getDescriptor();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment getDefaultInstanceForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment) {
          return mergeFrom((uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment other) {
        if (other == uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment.getDefaultInstance()) return this;
        if (other.hasAttachGroupIndex()) {
          setAttachGroupIndex(other.getAttachGroupIndex());
        }
        if (other.hasAttachmentAtomIndex()) {
          setAttachmentAtomIndex(other.getAttachmentAtomIndex());
        }
        if (other.hasSkeletonAtomIndex()) {
          setSkeletonAtomIndex(other.getSkeletonAtomIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAttachmentAtomIndex(input.readInt32());
              break;
            }
            case 16: {
              setSkeletonAtomIndex(input.readInt32());
              break;
            }
            case 24: {
              setAttachGroupIndex(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 attachGroupIndex = 3;
      public boolean hasAttachGroupIndex() {
        return result.hasAttachGroupIndex();
      }
      public int getAttachGroupIndex() {
        return result.getAttachGroupIndex();
      }
      public Builder setAttachGroupIndex(int value) {
        result.hasAttachGroupIndex = true;
        result.attachGroupIndex_ = value;
        return this;
      }
      public Builder clearAttachGroupIndex() {
        result.hasAttachGroupIndex = false;
        result.attachGroupIndex_ = 0;
        return this;
      }
      
      // optional int32 attachmentAtomIndex = 1;
      public boolean hasAttachmentAtomIndex() {
        return result.hasAttachmentAtomIndex();
      }
      public int getAttachmentAtomIndex() {
        return result.getAttachmentAtomIndex();
      }
      public Builder setAttachmentAtomIndex(int value) {
        result.hasAttachmentAtomIndex = true;
        result.attachmentAtomIndex_ = value;
        return this;
      }
      public Builder clearAttachmentAtomIndex() {
        result.hasAttachmentAtomIndex = false;
        result.attachmentAtomIndex_ = 0;
        return this;
      }
      
      // optional int32 skeletonAtomIndex = 2;
      public boolean hasSkeletonAtomIndex() {
        return result.hasSkeletonAtomIndex();
      }
      public int getSkeletonAtomIndex() {
        return result.getSkeletonAtomIndex();
      }
      public Builder setSkeletonAtomIndex(int value) {
        result.hasSkeletonAtomIndex = true;
        result.skeletonAtomIndex_ = value;
        return this;
      }
      public Builder clearSkeletonAtomIndex() {
        result.hasSkeletonAtomIndex = false;
        result.skeletonAtomIndex_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:uk.ac.ebi.chebi.ontology.core.buffer.Attachment)
    }
    
    static {
      defaultInstance = new Attachment(true);
      uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:uk.ac.ebi.chebi.ontology.core.buffer.Attachment)
  }
  
  public static final class AttachPoint extends
      com.google.protobuf.GeneratedMessage {
    // Use AttachPoint.newBuilder() to construct.
    private AttachPoint() {
      initFields();
    }
    private AttachPoint(boolean noInit) {}
    
    private static final AttachPoint defaultInstance;
    public static AttachPoint getDefaultInstance() {
      return defaultInstance;
    }
    
    public AttachPoint getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AttachPoint_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AttachPoint_fieldAccessorTable;
    }
    
    public enum AttachPointType
        implements com.google.protobuf.ProtocolMessageEnum {
      atomAttach(0, 1),
      bondAttach(1, 2),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static AttachPointType valueOf(int value) {
        switch (value) {
          case 1: return atomAttach;
          case 2: return bondAttach;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<AttachPointType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<AttachPointType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AttachPointType>() {
              public AttachPointType findValueByNumber(int number) {
                return AttachPointType.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final AttachPointType[] VALUES = {
        atomAttach, bondAttach, 
      };
      public static AttachPointType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private AttachPointType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:uk.ac.ebi.chebi.ontology.core.buffer.AttachPoint.AttachPointType)
    }
    
    // optional .uk.ac.ebi.chebi.ontology.core.buffer.AtomBuffer attachAtom = 1;
    public static final int ATTACHATOM_FIELD_NUMBER = 1;
    private boolean hasAttachAtom;
    private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer attachAtom_;
    public boolean hasAttachAtom() { return hasAttachAtom; }
    public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer getAttachAtom() { return attachAtom_; }
    
    // optional .uk.ac.ebi.chebi.ontology.core.buffer.BondBuffer attachBond = 2;
    public static final int ATTACHBOND_FIELD_NUMBER = 2;
    private boolean hasAttachBond;
    private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer attachBond_;
    public boolean hasAttachBond() { return hasAttachBond; }
    public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer getAttachBond() { return attachBond_; }
    
    private void initFields() {
      attachAtom_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.getDefaultInstance();
      attachBond_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasAttachAtom()) {
        if (!getAttachAtom().isInitialized()) return false;
      }
      if (hasAttachBond()) {
        if (!getAttachBond().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAttachAtom()) {
        output.writeMessage(1, getAttachAtom());
      }
      if (hasAttachBond()) {
        output.writeMessage(2, getAttachBond());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAttachAtom()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAttachAtom());
      }
      if (hasAttachBond()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAttachBond());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint result;
      
      // Construct using uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint();
        return builder;
      }
      
      protected uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint.getDescriptor();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint getDefaultInstanceForType() {
        return uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint) {
          return mergeFrom((uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint other) {
        if (other == uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint.getDefaultInstance()) return this;
        if (other.hasAttachAtom()) {
          mergeAttachAtom(other.getAttachAtom());
        }
        if (other.hasAttachBond()) {
          mergeAttachBond(other.getAttachBond());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.Builder subBuilder = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.newBuilder();
              if (hasAttachAtom()) {
                subBuilder.mergeFrom(getAttachAtom());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAttachAtom(subBuilder.buildPartial());
              break;
            }
            case 18: {
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer.Builder subBuilder = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer.newBuilder();
              if (hasAttachBond()) {
                subBuilder.mergeFrom(getAttachBond());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAttachBond(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .uk.ac.ebi.chebi.ontology.core.buffer.AtomBuffer attachAtom = 1;
      public boolean hasAttachAtom() {
        return result.hasAttachAtom();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer getAttachAtom() {
        return result.getAttachAtom();
      }
      public Builder setAttachAtom(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAttachAtom = true;
        result.attachAtom_ = value;
        return this;
      }
      public Builder setAttachAtom(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.Builder builderForValue) {
        result.hasAttachAtom = true;
        result.attachAtom_ = builderForValue.build();
        return this;
      }
      public Builder mergeAttachAtom(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer value) {
        if (result.hasAttachAtom() &&
            result.attachAtom_ != uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.getDefaultInstance()) {
          result.attachAtom_ =
            uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.newBuilder(result.attachAtom_).mergeFrom(value).buildPartial();
        } else {
          result.attachAtom_ = value;
        }
        result.hasAttachAtom = true;
        return this;
      }
      public Builder clearAttachAtom() {
        result.hasAttachAtom = false;
        result.attachAtom_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.getDefaultInstance();
        return this;
      }
      
      // optional .uk.ac.ebi.chebi.ontology.core.buffer.BondBuffer attachBond = 2;
      public boolean hasAttachBond() {
        return result.hasAttachBond();
      }
      public uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer getAttachBond() {
        return result.getAttachBond();
      }
      public Builder setAttachBond(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAttachBond = true;
        result.attachBond_ = value;
        return this;
      }
      public Builder setAttachBond(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer.Builder builderForValue) {
        result.hasAttachBond = true;
        result.attachBond_ = builderForValue.build();
        return this;
      }
      public Builder mergeAttachBond(uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer value) {
        if (result.hasAttachBond() &&
            result.attachBond_ != uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer.getDefaultInstance()) {
          result.attachBond_ =
            uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer.newBuilder(result.attachBond_).mergeFrom(value).buildPartial();
        } else {
          result.attachBond_ = value;
        }
        result.hasAttachBond = true;
        return this;
      }
      public Builder clearAttachBond() {
        result.hasAttachBond = false;
        result.attachBond_ = uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:uk.ac.ebi.chebi.ontology.core.buffer.AttachPoint)
    }
    
    static {
      defaultInstance = new AttachPoint(true);
      uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:uk.ac.ebi.chebi.ontology.core.buffer.AttachPoint)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Point2d_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Point2d_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Point3d_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Point3d_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AtomBuffer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AtomBuffer_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_uk_ac_ebi_chebi_ontology_core_buffer_BondBuffer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_uk_ac_ebi_chebi_ontology_core_buffer_BondBuffer_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AtomContainerBuffer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AtomContainerBuffer_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_uk_ac_ebi_chebi_ontology_core_buffer_DefinitionUnit_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_uk_ac_ebi_chebi_ontology_core_buffer_DefinitionUnit_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Definition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Definition_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Formula_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Formula_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Formula_Element_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Formula_Element_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Attachment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Attachment_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AttachPoint_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AttachPoint_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020cdkobjects.proto\022$uk.ac.ebi.chebi.onto" +
      "logy.core.buffer\"\037\n\007Point2d\022\t\n\001x\030\001 \002(\001\022\t" +
      "\n\001y\030\002 \002(\001\"*\n\007Point3d\022\t\n\001x\030\001 \002(\001\022\t\n\001y\030\002 \002" +
      "(\001\022\t\n\001z\030\003 \002(\001\"\331\002\n\nAtomBuffer\022\016\n\006symbol\030\001" +
      " \001(\t\022\024\n\014atomicNumber\030\014 \001(\005\022\024\n\014atomTypeNa" +
      "me\030\002 \001(\t\022\016\n\006charge\030\004 \001(\001\022\025\n\rhydrogenCoun" +
      "t\030\016 \001(\005\022\021\n\tatomIndex\030\007 \001(\005\022\022\n\nisAromatic" +
      "\030\010 \001(\010\022\036\n\026isAttachmentPseudoAtom\030\t \001(\010\022!" +
      "\n\031isPossibleAttachmentPoint\030\017 \001(\010\022>\n\007poi" +
      "nt2d\030\n \001(\0132-.uk.ac.ebi.chebi.ontology.co",
      "re.buffer.Point2d\022>\n\007point3d\030\013 \001(\0132-.uk." +
      "ac.ebi.chebi.ontology.core.buffer.Point3" +
      "d\"\210\001\n\nBondBuffer\022>\n\004atom\030\001 \003(\01320.uk.ac.e" +
      "bi.chebi.ontology.core.buffer.AtomBuffer" +
      "\":\n\005Order\022\n\n\006SINGLE\020\001\022\n\n\006DOUBLE\020\002\022\n\n\006TRI" +
      "PLE\020\003\022\r\n\tQUADRUPLE\020\004\"\221\004\n\023AtomContainerBu" +
      "ffer\022>\n\004atom\030\001 \003(\01320.uk.ac.ebi.chebi.ont" +
      "ology.core.buffer.AtomBuffer\022>\n\004bond\030\002 \003" +
      "(\01320.uk.ac.ebi.chebi.ontology.core.buffe" +
      "r.BondBuffer\022f\n\021atomContainerType\030\025 \001(\0162",
      "K.uk.ac.ebi.chebi.ontology.core.buffer.A" +
      "tomContainerBuffer.AtomContainerType\022\022\n\n" +
      "isAromatic\030\010 \001(\010\022\020\n\010isBranch\030\022 \001(\010\022\020\n\010is" +
      "Linear\030\034 \001(\010\022\017\n\007isCylic\030& \001(\010\022\016\n\006charge\030" +
      "0 \001(\005\022\026\n\016minRepeatCount\030\t \001(\005\022\026\n\016maxRepe" +
      "atCount\030\023 \001(\005\022>\n\007formula\030\024 \001(\0132-.uk.ac.e" +
      "bi.chebi.ontology.core.buffer.Formula\"I\n" +
      "\021AtomContainerType\022\014\n\010skeleton\020\001\022\022\n\016atta" +
      "ched_group\020\002\022\022\n\016arbitrary_part\020\003\"\212\003\n\016Def" +
      "initionUnit\022K\n\010skeleton\030\002 \001(\01329.uk.ac.eb",
      "i.chebi.ontology.core.buffer.AtomContain" +
      "erBuffer\022Q\n\016attachedGroups\030\001 \003(\01329.uk.ac" +
      ".ebi.chebi.ontology.core.buffer.AtomCont" +
      "ainerBuffer\022Q\n\016arbitrary_part\030\013 \003(\01329.uk" +
      ".ac.ebi.chebi.ontology.core.buffer.AtomC" +
      "ontainerBuffer\022E\n\013attachments\030\003 \003(\01320.uk" +
      ".ac.ebi.chebi.ontology.core.buffer.Attac" +
      "hment\022>\n\007formula\030\024 \001(\0132-.uk.ac.ebi.chebi" +
      ".ontology.core.buffer.Formula\"\361\001\n\nDefini" +
      "tion\022M\n\017definitionUnits\030\001 \003(\01324.uk.ac.eb",
      "i.chebi.ontology.core.buffer.DefinitionU" +
      "nit\022@\n\006child1\030\002 \001(\01320.uk.ac.ebi.chebi.on" +
      "tology.core.buffer.Definition\022@\n\006child2\030" +
      "\003 \001(\01320.uk.ac.ebi.chebi.ontology.core.bu" +
      "ffer.Definition\022\020\n\010operator\030\004 \001(\t\"\206\001\n\007Fo" +
      "rmula\022G\n\010elements\030\001 \003(\01325.uk.ac.ebi.cheb" +
      "i.ontology.core.buffer.Formula.Element\0322" +
      "\n\007Element\022\016\n\006symbol\030\001 \001(\t\022\027\n\017countExpres" +
      "sion\030\002 \001(\t\"^\n\nAttachment\022\030\n\020attachGroupI" +
      "ndex\030\003 \001(\005\022\033\n\023attachmentAtomIndex\030\001 \001(\005\022",
      "\031\n\021skeletonAtomIndex\030\002 \001(\005\"\314\001\n\013AttachPoi" +
      "nt\022D\n\nattachAtom\030\001 \001(\01320.uk.ac.ebi.chebi" +
      ".ontology.core.buffer.AtomBuffer\022D\n\natta" +
      "chBond\030\002 \001(\01320.uk.ac.ebi.chebi.ontology." +
      "core.buffer.BondBuffer\"1\n\017AttachPointTyp" +
      "e\022\016\n\natomAttach\020\001\022\016\n\nbondAttach\020\002B7\n$uk." +
      "ac.ebi.chebi.ontology.core.bufferB\017Buffe" +
      "redObjects"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Point2d_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Point2d_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Point2d_descriptor,
              new java.lang.String[] { "X", "Y", },
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d.class,
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point2d.Builder.class);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Point3d_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Point3d_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Point3d_descriptor,
              new java.lang.String[] { "X", "Y", "Z", },
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d.class,
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Point3d.Builder.class);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AtomBuffer_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AtomBuffer_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AtomBuffer_descriptor,
              new java.lang.String[] { "Symbol", "AtomicNumber", "AtomTypeName", "Charge", "HydrogenCount", "AtomIndex", "IsAromatic", "IsAttachmentPseudoAtom", "IsPossibleAttachmentPoint", "Point2D", "Point3D", },
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.class,
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomBuffer.Builder.class);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_BondBuffer_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_BondBuffer_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_uk_ac_ebi_chebi_ontology_core_buffer_BondBuffer_descriptor,
              new java.lang.String[] { "Atom", },
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer.class,
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.BondBuffer.Builder.class);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AtomContainerBuffer_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AtomContainerBuffer_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AtomContainerBuffer_descriptor,
              new java.lang.String[] { "Atom", "Bond", "AtomContainerType", "IsAromatic", "IsBranch", "IsLinear", "IsCylic", "Charge", "MinRepeatCount", "MaxRepeatCount", "Formula", },
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.class,
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AtomContainerBuffer.Builder.class);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_DefinitionUnit_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_DefinitionUnit_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_uk_ac_ebi_chebi_ontology_core_buffer_DefinitionUnit_descriptor,
              new java.lang.String[] { "Skeleton", "AttachedGroups", "ArbitraryPart", "Attachments", "Formula", },
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit.class,
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.DefinitionUnit.Builder.class);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Definition_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Definition_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Definition_descriptor,
              new java.lang.String[] { "DefinitionUnits", "Child1", "Child2", "Operator", },
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.class,
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Definition.Builder.class);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Formula_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Formula_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Formula_descriptor,
              new java.lang.String[] { "Elements", },
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.class,
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Builder.class);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Formula_Element_descriptor =
            internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Formula_descriptor.getNestedTypes().get(0);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Formula_Element_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Formula_Element_descriptor,
              new java.lang.String[] { "Symbol", "CountExpression", },
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element.class,
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Formula.Element.Builder.class);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Attachment_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Attachment_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_uk_ac_ebi_chebi_ontology_core_buffer_Attachment_descriptor,
              new java.lang.String[] { "AttachGroupIndex", "AttachmentAtomIndex", "SkeletonAtomIndex", },
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment.class,
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.Attachment.Builder.class);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AttachPoint_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AttachPoint_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_uk_ac_ebi_chebi_ontology_core_buffer_AttachPoint_descriptor,
              new java.lang.String[] { "AttachAtom", "AttachBond", },
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint.class,
              uk.ac.ebi.chebi.ontology.core.buffer.BufferedObjects.AttachPoint.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
